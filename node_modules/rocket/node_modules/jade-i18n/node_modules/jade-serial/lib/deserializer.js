
/*!
 * jade-serial - Deserializer
 * Copyright (c) 2011 LearnBoost <dev@learnboost.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var jade = require('jade');

/**
 * Expose Deserializer.
 */

module.exports = Deserializer;

/**
 * Initialize Deserializer with the given node.
 */

function Deserializer(node) {
  this.node = node;
}

Deserializer.prototype = {
  
  /**
   * Deserialize the AST, returning a valid Jade AST.
   */
  
  deserialize: function(){
    return this.visit(this.node);
  },
  
  /**
   * Visit `obj`.
   */
  
  visit: function(obj){
    if (Array.isArray(obj)) return obj.map(this.visit.bind(this));
    if (!obj.__type) return obj;
    var cons = obj.__type[0].toUpperCase() + obj.__type.substr(1)
      , node = new jade.nodes[cons];
    Object.keys(obj).forEach(function(key){
      node[key] = this.visit(obj[key]);
    }, this);
    if (node.__items) node.nodes = this.visit(node.__items);
    delete node.__items;
    delete node.__type;
    return node;
  }
};